apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ .Chart.Name }}
  namespace: {{ .Values.mysql.namespace.name }}
spec:
  selector:
    matchLabels:
      app:  {{ .Chart.Name }}
  replicas: {{ .Values.mysql.replicas.qty }}
  serviceName:  {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Chart.Name }}
    spec:
      containers:
      - name:  {{ .Chart.Name }}
        image: {{ .Values.mysql.containers.repository }}:{{ .Values.mysql.containers.tag }}
        env:
        {{- range $k, $v := .Values.mysql.secrets }}
        - name: {{ $k }}
          valueFrom:
            secretKeyRef:
              name:  {{ $.Chart.Name }}-secrets
              key: {{ $k }}
        {{- end }}
        - name: MYSQL_DATABASE
          value: app_db
        ports:
        - name:  {{ .Chart.Name }}
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: config-map
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: {{ .Values.mysql.resources.cpu }}
            memory: {{ .Values.mysql.resources.memory }}
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: config-map
        configMap:
          name:  {{ .Chart.Name }}
      tolerations:
      - key: {{ .Values.mysql.tolerations.key }}
        operator: "Equal"
        value: {{ .Values.mysql.tolerations.value }}
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: {{ .Values.mysql.affinity.podaffinity.key }}
                    operator: In
                    values:
                    {{- range .Values.mysql.affinity.podaffinity.value }}
                      - {{ . }}
                    {{- end }}
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.mysql.affinity.nodeaffinity.key }}
                    operator: In
                    values:
                    {{- range .Values.mysql.affinity.nodeaffinity.value }}
                      - {{ . }}
                    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mysql.pvc.storage }}
